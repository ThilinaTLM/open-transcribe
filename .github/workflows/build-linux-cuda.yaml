name: Build Linux CUDA

on:
  workflow_call:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-C codegen-units=1 -C target-cpu=native -C link-arg=-fuse-ld=lld"

jobs:
  build-linux-cuda:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: 🗂️ Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-cargo-cuda-${{ hashFiles('**/Cargo.lock') }}
          cache-on-failure: true

      - name: 🎯 Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.11
        with:
          cuda: '12.2'
          method: 'network'
          sub-packages: '["nvcc", "cudart", "curand", "cufft", "cusolve", "cusparse", "cublas", "thrust"]'

      - name: 📦 Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y libasound2-dev lld

      - name: 🔨 Build with CUDA support
        run: cargo build --release --target x86_64-unknown-linux-gnu --features whisper-rs/cuda

      - name: 📦 Package binary
        shell: bash
        run: |
          mkdir -p dist
          cp target/x86_64-unknown-linux-gnu/release/open-transcribe \
             dist/open-transcribe-x86_64-unknown-linux-gnu-cuda

      - name: 🚀 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-x86_64-unknown-linux-gnu-cuda
          path: dist/* 